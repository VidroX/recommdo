version: "3.9"
services:
  api:
    build:
      context: ./api/
      dockerfile: Dockerfile
    env_file: .env
    environment:
      DATABASE_HOST: mongo
    ports:
      - "8080:8080"
    volumes:
      - ./api/app:/app/app
    depends_on:
      - mongo
      - redis
    links:
      - mongo
    networks:
      - recommdo_backend_network
      - recommdo_frontend_network
  frontend:
    build:
      context: ./frontend/
      dockerfile: Dockerfile
    env_file: .env
    ports:
      - "3000:3000"
      - "49153:49153"
    volumes:
      - ./frontend:/usr/src/frontend
      - /usr/src/frontend/node_modules
      - /usr/src/frontend/.next
    networks:
      - recommdo_frontend_network
  worker:
    build:
      context: ./api/
      dockerfile: Dockerfile
    env_file: .env
    environment:
      DATABASE_HOST: mongo
    volumes:
      - ./api/app/celery:/app/app/celery
      - ./api/app/uploads:/app/app/uploads
    links:
      - redis
    depends_on:
      - api
      - redis
    entrypoint: celery --app app.celery.celery_app worker -c 2 --loglevel=info
    networks:
      - recommdo_backend_network
  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    env_file: .env
    command: redis-server --requirepass ${REDIS_PASSWORD}
    networks:
      - recommdo_backend_network
  mongo:
    image: mongo:latest
    env_file:
      - ./.env
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_INITDB_DATABASE}
    ports:
      - '27017-27019:27017-27019'
    volumes:
      - mongodb_data_container:/data/database
    networks:
      - recommdo_backend_network
  nginx:
    build:
      context: ./nginx/
      dockerfile: Dockerfile
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - api
      - frontend
    networks:
      - recommdo_frontend_network
      - recommdo_backend_network
  certbot:
    image: certbot/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot

volumes:
  mongodb_data_container:

networks:
  recommdo_frontend_network:
    driver: bridge
  recommdo_backend_network:
    driver: bridge