proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=STATIC:10m inactive=7d use_temp_path=off;

upstream api_upstream {
  server api:8080;
}

upstream nextjs_upstream {
  server frontend:3000;
}

server {
    listen 80 default_server;
    server_name server.vidrox.me;
	
    location / {
        return 301 https://$host$request_uri;
    }
	
	location /.well-known/acme-challenge/ {
		root /var/www/certbot;
	}
}

server {
	listen 443 default_server ssl http2;

	server_name server.vidrox.me;

	server_tokens off;
	  
	ssl_certificate /etc/letsencrypt/live/server.vidrox.me/fullchain.pem;
	ssl_certificate_key /etc/letsencrypt/live/server.vidrox.me/privkey.pem;
	  
	include /etc/letsencrypt/options-ssl-nginx.conf;
	ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

	proxy_set_header Upgrade $http_upgrade;
	proxy_set_header Connection 'upgrade';
	proxy_set_header Host $host;
	proxy_cache_bypass $http_upgrade;

	location /_next/static {
		proxy_cache STATIC;
		proxy_pass http://nextjs_upstream;

		# For testing cache - remove before deploying to production
		add_header X-Cache-Status $upstream_cache_status;
	}

	location /static {
		proxy_cache STATIC;
		proxy_ignore_headers Cache-Control;
		proxy_cache_valid 60m;
		proxy_pass http://nextjs_upstream;

		# For testing cache - remove before deploying to production
		add_header X-Cache-Status $upstream_cache_status;
	}

	location / {
		proxy_pass http://nextjs_upstream;
	}
	  
	location /gql {
		proxy_pass http://api_upstream;
		client_max_body_size 100M;
	}
}